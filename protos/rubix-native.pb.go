// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.20.1
// source: rubix-native.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignedPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload   string `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SignedPayload) Reset() {
	*x = SignedPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedPayload) ProtoMessage() {}

func (x *SignedPayload) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedPayload.ProtoReflect.Descriptor instead.
func (*SignedPayload) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{0}
}

func (x *SignedPayload) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *SignedPayload) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ChallengeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
}

func (x *ChallengeReq) Reset() {
	*x = ChallengeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeReq) ProtoMessage() {}

func (x *ChallengeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeReq.ProtoReflect.Descriptor instead.
func (*ChallengeReq) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{1}
}

func (x *ChallengeReq) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

type AccessReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did      string         `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Password string         `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Payload  *SignedPayload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *AccessReq) Reset() {
	*x = AccessReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessReq) ProtoMessage() {}

func (x *AccessReq) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessReq.ProtoReflect.Descriptor instead.
func (*AccessReq) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{2}
}

func (x *AccessReq) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *AccessReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AccessReq) GetPayload() *SignedPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ChallengeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge string `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *ChallengeResp) Reset() {
	*x = ChallengeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeResp) ProtoMessage() {}

func (x *ChallengeResp) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeResp.ProtoReflect.Descriptor instead.
func (*ChallengeResp) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{3}
}

func (x *ChallengeResp) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string                 `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	Expiry      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiry,proto3" json:"expiry,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{4}
}

func (x *Token) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *Token) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

type CreateDIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DidMode      int32  `protobuf:"varint,1,opt,name=didMode,proto3" json:"didMode,omitempty"`
	PrivKeyPwd   string `protobuf:"bytes,2,opt,name=privKeyPwd,proto3" json:"privKeyPwd,omitempty"`
	QuorumKeyPwd string `protobuf:"bytes,3,opt,name=quorumKeyPwd,proto3" json:"quorumKeyPwd,omitempty"`
	Secret       string `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	DidImage     string `protobuf:"bytes,5,opt,name=didImage,proto3" json:"didImage,omitempty"`
	PublicShare  string `protobuf:"bytes,6,opt,name=publicShare,proto3" json:"publicShare,omitempty"`
	PublicKey    string `protobuf:"bytes,7,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	MasterDid    string `protobuf:"bytes,8,opt,name=masterDid,proto3" json:"masterDid,omitempty"`
	// For sky's verification
	EcdsaChallengeResponse *SignedPayload `protobuf:"bytes,9,opt,name=ecdsaChallengeResponse,proto3" json:"ecdsaChallengeResponse,omitempty"`
}

func (x *CreateDIDReq) Reset() {
	*x = CreateDIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDIDReq) ProtoMessage() {}

func (x *CreateDIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDIDReq.ProtoReflect.Descriptor instead.
func (*CreateDIDReq) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDIDReq) GetDidMode() int32 {
	if x != nil {
		return x.DidMode
	}
	return 0
}

func (x *CreateDIDReq) GetPrivKeyPwd() string {
	if x != nil {
		return x.PrivKeyPwd
	}
	return ""
}

func (x *CreateDIDReq) GetQuorumKeyPwd() string {
	if x != nil {
		return x.QuorumKeyPwd
	}
	return ""
}

func (x *CreateDIDReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *CreateDIDReq) GetDidImage() string {
	if x != nil {
		return x.DidImage
	}
	return ""
}

func (x *CreateDIDReq) GetPublicShare() string {
	if x != nil {
		return x.PublicShare
	}
	return ""
}

func (x *CreateDIDReq) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *CreateDIDReq) GetMasterDid() string {
	if x != nil {
		return x.MasterDid
	}
	return ""
}

func (x *CreateDIDReq) GetEcdsaChallengeResponse() *SignedPayload {
	if x != nil {
		return x.EcdsaChallengeResponse
	}
	return nil
}

type CreateDIDRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did    string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Status bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// For Rubix DID access via sky
	AccessToken *Token `protobuf:"bytes,3,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
}

func (x *CreateDIDRes) Reset() {
	*x = CreateDIDRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDIDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDIDRes) ProtoMessage() {}

func (x *CreateDIDRes) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDIDRes.ProtoReflect.Descriptor instead.
func (*CreateDIDRes) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{6}
}

func (x *CreateDIDRes) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *CreateDIDRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateDIDRes) GetAccessToken() *Token {
	if x != nil {
		return x.AccessToken
	}
	return nil
}

type TransferRBTReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       int32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Receiver   string  `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	TokenCount float64 `protobuf:"fixed64,3,opt,name=tokenCount,proto3" json:"tokenCount,omitempty"`
	Comment    string  `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *TransferRBTReq) Reset() {
	*x = TransferRBTReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferRBTReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRBTReq) ProtoMessage() {}

func (x *TransferRBTReq) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRBTReq.ProtoReflect.Descriptor instead.
func (*TransferRBTReq) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{7}
}

func (x *TransferRBTReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TransferRBTReq) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *TransferRBTReq) GetTokenCount() float64 {
	if x != nil {
		return x.TokenCount
	}
	return 0
}

func (x *TransferRBTReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type RequestTransactionPayloadRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Hash      string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *RequestTransactionPayloadRes) Reset() {
	*x = RequestTransactionPayloadRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestTransactionPayloadRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTransactionPayloadRes) ProtoMessage() {}

func (x *RequestTransactionPayloadRes) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTransactionPayloadRes.ProtoReflect.Descriptor instead.
func (*RequestTransactionPayloadRes) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{8}
}

func (x *RequestTransactionPayloadRes) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RequestTransactionPayloadRes) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type HashSigned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PvtSign []byte `protobuf:"bytes,2,opt,name=pvtSign,proto3" json:"pvtSign,omitempty"`
	ImgSign []byte `protobuf:"bytes,3,opt,name=imgSign,proto3" json:"imgSign,omitempty"`
}

func (x *HashSigned) Reset() {
	*x = HashSigned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashSigned) ProtoMessage() {}

func (x *HashSigned) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashSigned.ProtoReflect.Descriptor instead.
func (*HashSigned) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{9}
}

func (x *HashSigned) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HashSigned) GetPvtSign() []byte {
	if x != nil {
		return x.PvtSign
	}
	return nil
}

func (x *HashSigned) GetImgSign() []byte {
	if x != nil {
		return x.ImgSign
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{10}
}

func (x *Status) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GenerateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenCount float64 `protobuf:"fixed64,1,opt,name=tokenCount,proto3" json:"tokenCount,omitempty"`
	Did        string  `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
}

func (x *GenerateReq) Reset() {
	*x = GenerateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateReq) ProtoMessage() {}

func (x *GenerateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateReq.ProtoReflect.Descriptor instead.
func (*GenerateReq) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateReq) GetTokenCount() float64 {
	if x != nil {
		return x.TokenCount
	}
	return 0
}

func (x *GenerateReq) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

type GenerateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *GenerateResp) Reset() {
	*x = GenerateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateResp) ProtoMessage() {}

func (x *GenerateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateResp.ProtoReflect.Descriptor instead.
func (*GenerateResp) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{12}
}

func (x *GenerateResp) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type GetBalanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance float64 `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetBalanceRes) Reset() {
	*x = GetBalanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRes) ProtoMessage() {}

func (x *GetBalanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRes.ProtoReflect.Descriptor instead.
func (*GetBalanceRes) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{13}
}

func (x *GetBalanceRes) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type SignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqID       string `protobuf:"bytes,1,opt,name=reqID,proto3" json:"reqID,omitempty"`
	Mode        int32  `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	Hash        []byte `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	OnlyPrivKey bool   `protobuf:"varint,4,opt,name=onlyPrivKey,proto3" json:"onlyPrivKey,omitempty"`
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{14}
}

func (x *SignRequest) GetReqID() string {
	if x != nil {
		return x.ReqID
	}
	return ""
}

func (x *SignRequest) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *SignRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *SignRequest) GetOnlyPrivKey() bool {
	if x != nil {
		return x.OnlyPrivKey
	}
	return false
}

type SignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqID    string `protobuf:"bytes,1,opt,name=reqID,proto3" json:"reqID,omitempty"`
	Mode     int32  `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	ImgSign  []byte `protobuf:"bytes,4,opt,name=imgSign,proto3" json:"imgSign,omitempty"`
	PvtSign  []byte `protobuf:"bytes,5,opt,name=pvtSign,proto3" json:"pvtSign,omitempty"`
}

func (x *SignResponse) Reset() {
	*x = SignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignResponse) ProtoMessage() {}

func (x *SignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignResponse.ProtoReflect.Descriptor instead.
func (*SignResponse) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{15}
}

func (x *SignResponse) GetReqID() string {
	if x != nil {
		return x.ReqID
	}
	return ""
}

func (x *SignResponse) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *SignResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignResponse) GetImgSign() []byte {
	if x != nil {
		return x.ImgSign
	}
	return nil
}

func (x *SignResponse) GetPvtSign() []byte {
	if x != nil {
		return x.PvtSign
	}
	return nil
}

type BasicReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      bool         `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message     string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	SignNeeded  bool         `protobuf:"varint,3,opt,name=signNeeded,proto3" json:"signNeeded,omitempty"`
	SignRequest *SignRequest `protobuf:"bytes,4,opt,name=signRequest,proto3" json:"signRequest,omitempty"`
}

func (x *BasicReponse) Reset() {
	*x = BasicReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicReponse) ProtoMessage() {}

func (x *BasicReponse) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicReponse.ProtoReflect.Descriptor instead.
func (*BasicReponse) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{16}
}

func (x *BasicReponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *BasicReponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BasicReponse) GetSignNeeded() bool {
	if x != nil {
		return x.SignNeeded
	}
	return false
}

func (x *BasicReponse) GetSignRequest() *SignRequest {
	if x != nil {
		return x.SignRequest
	}
	return nil
}

type DataTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserInfo     string `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	FileInfo     string `protobuf:"bytes,3,opt,name=fileInfo,proto3" json:"fileInfo,omitempty"`
	CommitterDID string `protobuf:"bytes,4,opt,name=committerDID,proto3" json:"committerDID,omitempty"`
	BatchID      string `protobuf:"bytes,5,opt,name=batchID,proto3" json:"batchID,omitempty"`
}

func (x *DataTokenReq) Reset() {
	*x = DataTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTokenReq) ProtoMessage() {}

func (x *DataTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTokenReq.ProtoReflect.Descriptor instead.
func (*DataTokenReq) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{17}
}

func (x *DataTokenReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DataTokenReq) GetUserInfo() string {
	if x != nil {
		return x.UserInfo
	}
	return ""
}

func (x *DataTokenReq) GetFileInfo() string {
	if x != nil {
		return x.FileInfo
	}
	return ""
}

func (x *DataTokenReq) GetCommitterDID() string {
	if x != nil {
		return x.CommitterDID
	}
	return ""
}

func (x *DataTokenReq) GetBatchID() string {
	if x != nil {
		return x.BatchID
	}
	return ""
}

type TokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenType string `protobuf:"bytes,1,opt,name=tokenType,proto3" json:"tokenType,omitempty"`
}

func (x *TokenReq) Reset() {
	*x = TokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenReq) ProtoMessage() {}

func (x *TokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenReq.ProtoReflect.Descriptor instead.
func (*TokenReq) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{18}
}

func (x *TokenReq) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

type TokenDetial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	TokenState int32  `protobuf:"varint,2,opt,name=tokenState,proto3" json:"tokenState,omitempty"`
}

func (x *TokenDetial) Reset() {
	*x = TokenDetial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenDetial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenDetial) ProtoMessage() {}

func (x *TokenDetial) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenDetial.ProtoReflect.Descriptor instead.
func (*TokenDetial) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{19}
}

func (x *TokenDetial) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TokenDetial) GetTokenState() int32 {
	if x != nil {
		return x.TokenState
	}
	return 0
}

type TokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenDetials []*TokenDetial `protobuf:"bytes,1,rep,name=tokenDetials,proto3" json:"tokenDetials,omitempty"`
}

func (x *TokenResp) Reset() {
	*x = TokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenResp) ProtoMessage() {}

func (x *TokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenResp.ProtoReflect.Descriptor instead.
func (*TokenResp) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{20}
}

func (x *TokenResp) GetTokenDetials() []*TokenDetial {
	if x != nil {
		return x.TokenDetials
	}
	return nil
}

type CommitDataTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchID string `protobuf:"bytes,1,opt,name=batchID,proto3" json:"batchID,omitempty"`
}

func (x *CommitDataTokenReq) Reset() {
	*x = CommitDataTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitDataTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitDataTokenReq) ProtoMessage() {}

func (x *CommitDataTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitDataTokenReq.ProtoReflect.Descriptor instead.
func (*CommitDataTokenReq) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{21}
}

func (x *CommitDataTokenReq) GetBatchID() string {
	if x != nil {
		return x.BatchID
	}
	return ""
}

type IncomingTxnDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnId      string                 `protobuf:"bytes,1,opt,name=txnId,proto3" json:"txnId,omitempty"`
	Sender     string                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver   string                 `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount     float64                `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Comment    string                 `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Type       int32                  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TickerName string                 `protobuf:"bytes,8,opt,name=tickerName,proto3" json:"tickerName,omitempty"`
	Gas        float64                `protobuf:"fixed64,9,opt,name=gas,proto3" json:"gas,omitempty"`
}

func (x *IncomingTxnDetails) Reset() {
	*x = IncomingTxnDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomingTxnDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomingTxnDetails) ProtoMessage() {}

func (x *IncomingTxnDetails) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomingTxnDetails.ProtoReflect.Descriptor instead.
func (*IncomingTxnDetails) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{22}
}

func (x *IncomingTxnDetails) GetTxnId() string {
	if x != nil {
		return x.TxnId
	}
	return ""
}

func (x *IncomingTxnDetails) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *IncomingTxnDetails) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *IncomingTxnDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *IncomingTxnDetails) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *IncomingTxnDetails) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *IncomingTxnDetails) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *IncomingTxnDetails) GetTickerName() string {
	if x != nil {
		return x.TickerName
	}
	return ""
}

func (x *IncomingTxnDetails) GetGas() float64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

type TransactionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId   string                 `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	TransactionType string                 `protobuf:"bytes,2,opt,name=transactionType,proto3" json:"transactionType,omitempty"`
	BlockId         string                 `protobuf:"bytes,3,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Mode            int32                  `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`
	SenderDID       string                 `protobuf:"bytes,5,opt,name=senderDID,proto3" json:"senderDID,omitempty"`
	ReceiverDID     string                 `protobuf:"bytes,6,opt,name=receiverDID,proto3" json:"receiverDID,omitempty"`
	Amount          float64                `protobuf:"fixed64,7,opt,name=amount,proto3" json:"amount,omitempty"`
	TotalTime       float64                `protobuf:"fixed64,8,opt,name=totalTime,proto3" json:"totalTime,omitempty"`
	Comment         string                 `protobuf:"bytes,9,opt,name=comment,proto3" json:"comment,omitempty"`
	DateTime        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	Status          bool                   `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TransactionDetails) Reset() {
	*x = TransactionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetails) ProtoMessage() {}

func (x *TransactionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetails.ProtoReflect.Descriptor instead.
func (*TransactionDetails) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{23}
}

func (x *TransactionDetails) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionDetails) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *TransactionDetails) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *TransactionDetails) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *TransactionDetails) GetSenderDID() string {
	if x != nil {
		return x.SenderDID
	}
	return ""
}

func (x *TransactionDetails) GetReceiverDID() string {
	if x != nil {
		return x.ReceiverDID
	}
	return ""
}

func (x *TransactionDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionDetails) GetTotalTime() float64 {
	if x != nil {
		return x.TotalTime
	}
	return 0
}

func (x *TransactionDetails) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TransactionDetails) GetDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTime
	}
	return nil
}

func (x *TransactionDetails) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type TransactionHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*TransactionDetails `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Error        string                `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TransactionHistory) Reset() {
	*x = TransactionHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rubix_native_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionHistory) ProtoMessage() {}

func (x *TransactionHistory) ProtoReflect() protoreflect.Message {
	mi := &file_rubix_native_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionHistory.ProtoReflect.Descriptor instead.
func (*TransactionHistory) Descriptor() ([]byte, []int) {
	return file_rubix_native_proto_rawDescGZIP(), []int{24}
}

func (x *TransactionHistory) GetTransactions() []*TransactionDetails {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *TransactionHistory) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_rubix_native_proto protoreflect.FileDescriptor

var file_rubix_native_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x75, 0x62, 0x69, 0x78, 0x2d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x0d, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x20, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x69, 0x64, 0x22, 0x6a, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x2f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x2d, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x22, 0x5d, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x06, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22,
	0xcd, 0x02, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x64, 0x69, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x69, 0x76, 0x4b, 0x65, 0x79, 0x50, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x50, 0x77, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x71, 0x75,
	0x6f, 0x72, 0x75, 0x6d, 0x4b, 0x65, 0x79, 0x50, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x4b, 0x65, 0x79, 0x50, 0x77, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x64,
	0x12, 0x4d, 0x0a, 0x16, 0x65, 0x63, 0x64, 0x73, 0x61, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x16, 0x65, 0x63, 0x64, 0x73, 0x61, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x69, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x49, 0x44, 0x52, 0x65, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7a, 0x0a, 0x0e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x42, 0x54, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x50, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x68,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x76, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x76, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x20, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3f, 0x0a, 0x0b,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x22, 0x26, 0x0a,
	0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x29, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x6d, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x71, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x65, 0x71, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x6e, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x22,
	0x88, 0x01, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x71, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x65, 0x71, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x53, 0x69, 0x67,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x53, 0x69, 0x67, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x76, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x76, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x0c, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x35, 0x0a,
	0x0b, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x44, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x44, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x44, 0x22, 0x28, 0x0a, 0x08, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x43, 0x0a,
	0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x44, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x37, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x44, 0x65, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x22, 0x90, 0x02, 0x0a, 0x12, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x78, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x78, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x67, 0x61, 0x73, 0x22, 0xf2, 0x02, 0x0a, 0x12,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x36, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x6a, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x99, 0x06, 0x0a,
	0x0c, 0x52, 0x75, 0x62, 0x69, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x44, 0x49, 0x44, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x32, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x49, 0x44, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x49, 0x44,
	0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x49, 0x44, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x35,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x42, 0x54, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x42, 0x54, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x11,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x78,
	0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x0f, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3a,
	0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x42, 0x54, 0x12, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x66, 0x65, 0x78, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rubix_native_proto_rawDescOnce sync.Once
	file_rubix_native_proto_rawDescData = file_rubix_native_proto_rawDesc
)

func file_rubix_native_proto_rawDescGZIP() []byte {
	file_rubix_native_proto_rawDescOnce.Do(func() {
		file_rubix_native_proto_rawDescData = protoimpl.X.CompressGZIP(file_rubix_native_proto_rawDescData)
	})
	return file_rubix_native_proto_rawDescData
}

var file_rubix_native_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_rubix_native_proto_goTypes = []interface{}{
	(*SignedPayload)(nil),                // 0: protos.SignedPayload
	(*ChallengeReq)(nil),                 // 1: protos.ChallengeReq
	(*AccessReq)(nil),                    // 2: protos.AccessReq
	(*ChallengeResp)(nil),                // 3: protos.ChallengeResp
	(*Token)(nil),                        // 4: protos.Token
	(*CreateDIDReq)(nil),                 // 5: protos.CreateDIDReq
	(*CreateDIDRes)(nil),                 // 6: protos.CreateDIDRes
	(*TransferRBTReq)(nil),               // 7: protos.TransferRBTReq
	(*RequestTransactionPayloadRes)(nil), // 8: protos.RequestTransactionPayloadRes
	(*HashSigned)(nil),                   // 9: protos.HashSigned
	(*Status)(nil),                       // 10: protos.Status
	(*GenerateReq)(nil),                  // 11: protos.GenerateReq
	(*GenerateResp)(nil),                 // 12: protos.GenerateResp
	(*GetBalanceRes)(nil),                // 13: protos.GetBalanceRes
	(*SignRequest)(nil),                  // 14: protos.SignRequest
	(*SignResponse)(nil),                 // 15: protos.SignResponse
	(*BasicReponse)(nil),                 // 16: protos.BasicReponse
	(*DataTokenReq)(nil),                 // 17: protos.DataTokenReq
	(*TokenReq)(nil),                     // 18: protos.TokenReq
	(*TokenDetial)(nil),                  // 19: protos.TokenDetial
	(*TokenResp)(nil),                    // 20: protos.TokenResp
	(*CommitDataTokenReq)(nil),           // 21: protos.CommitDataTokenReq
	(*IncomingTxnDetails)(nil),           // 22: protos.IncomingTxnDetails
	(*TransactionDetails)(nil),           // 23: protos.TransactionDetails
	(*TransactionHistory)(nil),           // 24: protos.TransactionHistory
	(*timestamppb.Timestamp)(nil),        // 25: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                // 26: google.protobuf.Empty
}
var file_rubix_native_proto_depIdxs = []int32{
	0,  // 0: protos.AccessReq.payload:type_name -> protos.SignedPayload
	25, // 1: protos.Token.expiry:type_name -> google.protobuf.Timestamp
	0,  // 2: protos.CreateDIDReq.ecdsaChallengeResponse:type_name -> protos.SignedPayload
	4,  // 3: protos.CreateDIDRes.accessToken:type_name -> protos.Token
	14, // 4: protos.BasicReponse.signRequest:type_name -> protos.SignRequest
	19, // 5: protos.TokenResp.tokenDetials:type_name -> protos.TokenDetial
	25, // 6: protos.IncomingTxnDetails.timestamp:type_name -> google.protobuf.Timestamp
	25, // 7: protos.TransactionDetails.dateTime:type_name -> google.protobuf.Timestamp
	23, // 8: protos.TransactionHistory.transactions:type_name -> protos.TransactionDetails
	1,  // 9: protos.RubixService.GetDIDChallenge:input_type -> protos.ChallengeReq
	2,  // 10: protos.RubixService.GetDIDAccess:input_type -> protos.AccessReq
	5,  // 11: protos.RubixService.CreateDID:input_type -> protos.CreateDIDReq
	18, // 12: protos.RubixService.GetAllTokens:input_type -> protos.TokenReq
	7,  // 13: protos.RubixService.TransferRBT:input_type -> protos.TransferRBTReq
	17, // 14: protos.RubixService.CreateDataToken:input_type -> protos.DataTokenReq
	21, // 15: protos.RubixService.CommitDataToken:input_type -> protos.CommitDataTokenReq
	26, // 16: protos.RubixService.StreamIncomingTxn:input_type -> google.protobuf.Empty
	15, // 17: protos.RubixService.StreamSignature:input_type -> protos.SignResponse
	11, // 18: protos.RubixService.GenerateRBT:input_type -> protos.GenerateReq
	26, // 19: protos.RubixService.GetBalance:input_type -> google.protobuf.Empty
	26, // 20: protos.RubixService.GetTransactionHistory:input_type -> google.protobuf.Empty
	3,  // 21: protos.RubixService.GetDIDChallenge:output_type -> protos.ChallengeResp
	4,  // 22: protos.RubixService.GetDIDAccess:output_type -> protos.Token
	6,  // 23: protos.RubixService.CreateDID:output_type -> protos.CreateDIDRes
	20, // 24: protos.RubixService.GetAllTokens:output_type -> protos.TokenResp
	16, // 25: protos.RubixService.TransferRBT:output_type -> protos.BasicReponse
	16, // 26: protos.RubixService.CreateDataToken:output_type -> protos.BasicReponse
	16, // 27: protos.RubixService.CommitDataToken:output_type -> protos.BasicReponse
	22, // 28: protos.RubixService.StreamIncomingTxn:output_type -> protos.IncomingTxnDetails
	16, // 29: protos.RubixService.StreamSignature:output_type -> protos.BasicReponse
	16, // 30: protos.RubixService.GenerateRBT:output_type -> protos.BasicReponse
	13, // 31: protos.RubixService.GetBalance:output_type -> protos.GetBalanceRes
	24, // 32: protos.RubixService.GetTransactionHistory:output_type -> protos.TransactionHistory
	21, // [21:33] is the sub-list for method output_type
	9,  // [9:21] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_rubix_native_proto_init() }
func file_rubix_native_proto_init() {
	if File_rubix_native_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rubix_native_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDIDRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferRBTReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestTransactionPayloadRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashSigned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenDetial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitDataTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomingTxnDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rubix_native_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rubix_native_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rubix_native_proto_goTypes,
		DependencyIndexes: file_rubix_native_proto_depIdxs,
		MessageInfos:      file_rubix_native_proto_msgTypes,
	}.Build()
	File_rubix_native_proto = out.File
	file_rubix_native_proto_rawDesc = nil
	file_rubix_native_proto_goTypes = nil
	file_rubix_native_proto_depIdxs = nil
}
